{
  "info": {
    "name": "Shifty Backend - Custom Reports",
    "description": "Test collection for custom billing period report generation",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "your-hr-token-here",
      "type": "string"
    },
    {
      "key": "template_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "billing_period_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "natalie_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "dany_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Setup Tests",
      "item": [
        {
          "name": "Create Sales Person - Natalie",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/sales-person",
              "host": ["{{base_url}}"],
              "path": ["sales-person"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Natalie\",\n  \"inactive\": false,\n  \"is_paid\": true\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has id\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.collectionVariables.set('natalie_id', jsonData.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Sales Person - Dany",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/sales-person",
              "host": ["{{base_url}}"],
              "path": ["sales-person"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Dany\",\n  \"inactive\": false,\n  \"is_paid\": true\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has id\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.collectionVariables.set('dany_id', jsonData.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Billing Period",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/billing-period",
              "host": ["{{base_url}}"],
              "path": ["billing-period"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"end_date\": \"2025-08-14\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has id\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.collectionVariables.set('billing_period_id', jsonData.id);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Template Tests",
      "item": [
        {
          "name": "Create German Hours Report Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/text-templates",
              "host": ["{{base_url}}"],
              "path": ["text-templates"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"template_type\": \"german_hours_report\",\n  \"template_text\": \"Hallo Frau Saur,\\n\\nhiermit sende ich Ihnen die Stunden für den Abrechnungszeitraum vom {{ billing_period.start_date }} bis {{ billing_period.end_date }}.\\n{% for person in billing_period.sales_persons %}{% if person.sales_person_id == \\\"{{natalie_id}}\\\" %}{% for value in person.values %}{% if value.type == \\\"overall\\\" %}Natalie: {{ value.value_delta | round(precision=0) }} Stunden\\n{% endif %}{% endfor %}{% elif person.sales_person_id == \\\"{{dany_id}}\\\" %}{% for value in person.values %}{% if value.type == \\\"overall\\\" %}Dany: {{ value.value_delta | round(precision=0) }} Stunden\\n{% endif %}{% endfor %}{% endif %}{% endfor %}\\nViele Grüße,\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has id\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.collectionVariables.set('template_id', jsonData.id);",
                  "});",
                  "",
                  "pm.test(\"Template type is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.template_type).to.eql('german_hours_report');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Templates",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/text-templates",
              "host": ["{{base_url}}"],
              "path": ["text-templates"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Template by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/text-templates/{{template_id}}",
              "host": ["{{base_url}}"],
              "path": ["text-templates", "{{template_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Template contains German text\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.template_text).to.include('Hallo Frau Saur');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Custom Report Generation",
      "item": [
        {
          "name": "Generate German Hours Report",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/billing-period/{{billing_period_id}}/custom-report/{{template_id}}",
              "host": ["{{base_url}}"],
              "path": ["billing-period", "{{billing_period_id}}", "custom-report", "{{template_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Content-Type is text/plain\", function () {",
                  "    pm.expect(pm.response.headers.get('Content-Type')).to.include('text/plain');",
                  "});",
                  "",
                  "pm.test(\"Report contains German greeting\", function () {",
                  "    pm.expect(pm.response.text()).to.include('Hallo Frau Saur');",
                  "});",
                  "",
                  "pm.test(\"Report contains date range\", function () {",
                  "    var responseText = pm.response.text();",
                  "    pm.expect(responseText).to.include('2025-07-15');",
                  "    pm.expect(responseText).to.include('2025-08-14');",
                  "});",
                  "",
                  "pm.test(\"Report contains closing\", function () {",
                  "    pm.expect(pm.response.text()).to.include('Viele Grüße');",
                  "});",
                  "",
                  "console.log('Generated Report:');",
                  "console.log(pm.response.text());"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate Report - Template with Custom Hours",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/text-templates",
              "host": ["{{base_url}}"],
              "path": ["text-templates"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"template_type\": \"custom_hours_test\",\n  \"template_text\": \"Custom Hours Report:\\n{% for person in billing_period.sales_persons %}{% for value in person.values %}{% if value.type starts_with \\\"custom_extra_hours:\\\" %}{{ value.type | replace(from=\\\"custom_extra_hours:\\\", to=\\\"\\\") | title }}: {{ value.value_delta }}h\\n{% endif %}{% endfor %}{% endfor %}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Custom template created\", function () {",
                  "    pm.response.to.have.status(201);",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('custom_template_id', jsonData.id);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Error Cases",
      "item": [
        {
          "name": "Generate Report - Template Not Found",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/billing-period/{{billing_period_id}}/custom-report/non-existent-uuid",
              "host": ["{{base_url}}"],
              "path": ["billing-period", "{{billing_period_id}}", "custom-report", "non-existent-uuid"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test(\"Error message mentions template\", function () {",
                  "    pm.expect(pm.response.text()).to.include('not found');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate Report - Billing Period Not Found",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/billing-period/non-existent-uuid/custom-report/{{template_id}}",
              "host": ["{{base_url}}"],
              "path": ["billing-period", "non-existent-uuid", "custom-report", "{{template_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate Report - Unauthorized",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid-token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/billing-period/{{billing_period_id}}/custom-report/{{template_id}}",
              "host": ["{{base_url}}"],
              "path": ["billing-period", "{{billing_period_id}}", "custom-report", "{{template_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401 or 403\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([401, 403]);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Advanced Templates",
      "item": [
        {
          "name": "Create Complex Calculation Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/text-templates",
              "host": ["{{base_url}}"],
              "path": ["text-templates"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"template_type\": \"complex_calculations\",\n  \"template_text\": \"Team Summary Report:\\n{% set total_hours = 0 %}{% set employee_count = 0 %}{% for person in billing_period.sales_persons %}{% set_global employee_count = employee_count + 1 %}{% for value in person.values %}{% if value.type == \\\"overall\\\" %}{% set_global total_hours = total_hours + value.value_delta %}{% endif %}{% endfor %}{% endfor %}\\nTotal Employees: {{ employee_count }}\\nTotal Hours: {{ total_hours }}h\\nAverage Hours: {{ (total_hours / employee_count) | round(precision=1) }}h\\n{% if total_hours > 300 %}⚠️ High workload detected!{% else %}✅ Normal workload{% endif %}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Complex template created\", function () {",
                  "    pm.response.to.have.status(201);",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('complex_template_id', jsonData.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate Complex Report",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/billing-period/{{billing_period_id}}/custom-report/{{complex_template_id}}",
              "host": ["{{base_url}}"],
              "path": ["billing-period", "{{billing_period_id}}", "custom-report", "{{complex_template_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Report contains calculations\", function () {",
                  "    var responseText = pm.response.text();",
                  "    pm.expect(responseText).to.include('Total Employees:');",
                  "    pm.expect(responseText).to.include('Total Hours:');",
                  "    pm.expect(responseText).to.include('Average Hours:');",
                  "});",
                  "",
                  "console.log('Complex Report:');",
                  "console.log(pm.response.text());"
                ]
              }
            }
          ]
        },
        {
          "name": "Create CSV Export Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/text-templates",
              "host": ["{{base_url}}"],
              "path": ["text-templates"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"template_type\": \"csv_export\",\n  \"template_text\": \"Employee_ID,Overall_Hours,Balance_Hours\\n{% for person in billing_period.sales_persons %}{% set overall = 0 %}{% set balance = 0 %}{% for value in person.values %}{% if value.type == \\\"overall\\\" %}{% set overall = value.value_delta %}{% elif value.type == \\\"balance\\\" %}{% set balance = value.value_delta %}{% endif %}{% endfor %}{{ person.sales_person_id }},{{ overall }},{{ balance }}\\n{% endfor %}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"CSV template created\", function () {",
                  "    pm.response.to.have.status(201);",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('csv_template_id', jsonData.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Generate CSV Report",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/billing-period/{{billing_period_id}}/custom-report/{{csv_template_id}}",
              "host": ["{{base_url}}"],
              "path": ["billing-period", "{{billing_period_id}}", "custom-report", "{{csv_template_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"CSV format is correct\", function () {",
                  "    var responseText = pm.response.text();",
                  "    pm.expect(responseText).to.include('Employee_ID,Overall_Hours,Balance_Hours');",
                  "    var lines = responseText.split('\\n');",
                  "    pm.expect(lines.length).to.be.greaterThan(1);",
                  "});",
                  "",
                  "console.log('CSV Report:');",
                  "console.log(pm.response.text());"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Cleanup",
      "item": [
        {
          "name": "Delete Template",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/text-templates/{{template_id}}",
              "host": ["{{base_url}}"],
              "path": ["text-templates", "{{template_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}